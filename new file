show_po_button = fields.Boolean(compute="_compute_show_po_button")
    show_internal_transfer_button = fields.Boolean(compute="_compute_show_internal_transfer_button"

    @api.depends('rfq_product_ids.get_by')
    def _compute_show_po_button(self):
        for record in self:
            record.show_po_button = any(line.get_by == 'purchase_order' for line in record.rfq_product_ids)

    @api.depends('rfq_product_ids.get_by')
    def _compute_show_internal_transfer_button(self):
        for record in self:
            record.show_internal_transfer_button = any(line.get_by == 'internal_transfer' for line in record.rfq_product_ids)


                        <div name="button_box" position="inside">
                            <button class="oe_stat_button" type="object" name="get_po" icon="fa-shopping-bag" 
                                attrs="{'invisible': [('show_po_button', '=', False)]}">
                                <field string="Purchase Order" name="po_count" widget="statinfo"/>
                            </button>
                            <button class="oe_stat_button" type="object" name="get_internal_transfer" icon="fa-snowflake-o" 
                                attrs="{'invisible': [('show_internal_transfer_button', '=', False)]}">
                                <field string="Internal Transfer" name="internal_transfer_count" widget="statinfo"/>
                            </button>
                        




show_po_button = fields.Boolean(default=False)
    show_internal_transfer_button = fields.Boolean(default=False

                        })
                    ],
                    'origin': self.name,
                }
                transfer = self.env['stock.picking'].create(picking_vals)
                if transfer:
                    record.get_by = 'internal_transfer'
                    self.show_internal_transfer_button = 

})
                        ],
                        'origin': self.name,
                    }
                    order = self.env['purchase.order'].create(order_vals)
                    if order:
                        record.get_by = 'purchase_order'
                        self.show_po_button = True


<button class="oe_stat_button" type="object" name="get_po" icon="fa-shopping-bag"
                                invisible="not show_po_button">
                                <field string="Purchase Order" name="po_count" widget="statinfo"/>
                            </button>
                            <button class="oe_stat_button" type="object" name="get_internal_transfer" icon="fa-snowflake-o"
                                invisible="not show_internal_transfer_button">
                                <field string="Internal Transfer" name="internal_transfer_count" widget="statinfo"/>
                            
